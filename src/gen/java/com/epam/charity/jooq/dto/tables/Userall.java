/*
 * This file is generated by jOOQ.
*/
package com.epam.charity.jooq.dto.tables;


import com.epam.charity.jooq.dto.Public;
import com.epam.charity.jooq.dto.tables.records.UserallRecord;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Userall extends TableImpl<UserallRecord> {

    private static final long serialVersionUID = 1810952389;

    /**
     * The reference instance of <code>public.UserAll</code>
     */
    public static final Userall USERALL = new Userall();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserallRecord> getRecordType() {
        return UserallRecord.class;
    }

    /**
     * The column <code>public.UserAll.name</code>.
     */
    public final TableField<UserallRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.UserAll.soname</code>.
     */
    public final TableField<UserallRecord, String> SONAME = createField("soname", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.UserAll.birthdate</code>.
     */
    public final TableField<UserallRecord, Date> BIRTHDATE = createField("birthdate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>public.UserAll</code> table reference
     */
    public Userall() {
        this("UserAll", null);
    }

    /**
     * Create an aliased <code>public.UserAll</code> table reference
     */
    public Userall(String alias) {
        this(alias, USERALL);
    }

    private Userall(String alias, Table<UserallRecord> aliased) {
        this(alias, aliased, null);
    }

    private Userall(String alias, Table<UserallRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Userall as(String alias) {
        return new Userall(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Userall rename(String name) {
        return new Userall(name, null);
    }
}
