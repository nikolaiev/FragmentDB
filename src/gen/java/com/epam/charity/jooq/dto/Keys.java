/*
 * This file is generated by jOOQ.
*/
package com.epam.charity.jooq.dto;


import com.epam.charity.jooq.dto.tables.Gentables;
import com.epam.charity.jooq.dto.tables.Group;
import com.epam.charity.jooq.dto.tables.University;
import com.epam.charity.jooq.dto.tables.User;
import com.epam.charity.jooq.dto.tables.records.GentablesRecord;
import com.epam.charity.jooq.dto.tables.records.GroupRecord;
import com.epam.charity.jooq.dto.tables.records.UniversityRecord;
import com.epam.charity.jooq.dto.tables.records.UserRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<GentablesRecord, Long> IDENTITY_GENTABLES = Identities0.IDENTITY_GENTABLES;
    public static final Identity<GroupRecord, Long> IDENTITY_GROUP = Identities0.IDENTITY_GROUP;
    public static final Identity<UniversityRecord, Long> IDENTITY_UNIVERSITY = Identities0.IDENTITY_UNIVERSITY;
    public static final Identity<UserRecord, Long> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<GentablesRecord> GEN_TABLE_ID_PK = UniqueKeys0.GEN_TABLE_ID_PK;
    public static final UniqueKey<GroupRecord> ID_PK_GROUP = UniqueKeys0.ID_PK_GROUP;
    public static final UniqueKey<UniversityRecord> UNIV_ID_PK = UniqueKeys0.UNIV_ID_PK;
    public static final UniqueKey<UserRecord> ID_PK_USER = UniqueKeys0.ID_PK_USER;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<GroupRecord, UniversityRecord> GROUP__UNIV_ID_FK = ForeignKeys0.GROUP__UNIV_ID_FK;
    public static final ForeignKey<UserRecord, GroupRecord> USER__USER_GID_FK = ForeignKeys0.USER__USER_GID_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<GentablesRecord, Long> IDENTITY_GENTABLES = createIdentity(Gentables.GENTABLES, Gentables.GENTABLES.ID);
        public static Identity<GroupRecord, Long> IDENTITY_GROUP = createIdentity(Group.GROUP, Group.GROUP.ID);
        public static Identity<UniversityRecord, Long> IDENTITY_UNIVERSITY = createIdentity(University.UNIVERSITY, University.UNIVERSITY.ID);
        public static Identity<UserRecord, Long> IDENTITY_USER = createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<GentablesRecord> GEN_TABLE_ID_PK = createUniqueKey(Gentables.GENTABLES, "gen_table_id_pk", Gentables.GENTABLES.ID);
        public static final UniqueKey<GroupRecord> ID_PK_GROUP = createUniqueKey(Group.GROUP, "id_pk_group", Group.GROUP.ID);
        public static final UniqueKey<UniversityRecord> UNIV_ID_PK = createUniqueKey(University.UNIVERSITY, "univ_id_pk", University.UNIVERSITY.ID);
        public static final UniqueKey<UserRecord> ID_PK_USER = createUniqueKey(User.USER, "id_pk_user", User.USER.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<GroupRecord, UniversityRecord> GROUP__UNIV_ID_FK = createForeignKey(com.epam.charity.jooq.dto.Keys.UNIV_ID_PK, Group.GROUP, "Group__univ_id_fk", Group.GROUP.UNIV_ID);
        public static final ForeignKey<UserRecord, GroupRecord> USER__USER_GID_FK = createForeignKey(com.epam.charity.jooq.dto.Keys.ID_PK_GROUP, User.USER, "User__user_gid_fk", User.USER.GID);
    }
}
