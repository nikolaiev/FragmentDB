/*
 * This file is generated by jOOQ.
*/
package com.epam.charity.jooq.dto.tables.records;


import com.epam.charity.jooq.dto.tables.Userall;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserallRecord extends TableRecordImpl<UserallRecord> implements Record3<String, String, Date> {

    private static final long serialVersionUID = 1786040204;

    /**
     * Setter for <code>public.UserAll.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.UserAll.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.UserAll.soname</code>.
     */
    public void setSoname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.UserAll.soname</code>.
     */
    public String getSoname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.UserAll.birthdate</code>.
     */
    public void setBirthdate(Date value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.UserAll.birthdate</code>.
     */
    public Date getBirthdate() {
        return (Date) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Date> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Date> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Userall.USERALL.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Userall.USERALL.SONAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return Userall.USERALL.BIRTHDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSoname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getBirthdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserallRecord value1(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserallRecord value2(String value) {
        setSoname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserallRecord value3(Date value) {
        setBirthdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserallRecord values(String value1, String value2, Date value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserallRecord
     */
    public UserallRecord() {
        super(Userall.USERALL);
    }

    /**
     * Create a detached, initialised UserallRecord
     */
    public UserallRecord(String name, String soname, Date birthdate) {
        super(Userall.USERALL);

        set(0, name);
        set(1, soname);
        set(2, birthdate);
    }
}
